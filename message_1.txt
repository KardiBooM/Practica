import math #Подключение библотеки
from random import random  # Подключение рандома для цикла
from scipy. special import expit # Подключение библотеки для нахождения сигмы
l_k = float(input('Введите интенсивность отказов k-го элемента')) #Ввод интенсив. отказов (глобальная переменная)
class Kg: #Коэфициент готовности НКУ #функция для расчета коэф. готовности
        Tb, Tp = float(input('Введите общее время работы')), float(input('введите среднее время восстановления'))
        Tbk = float(input('введите среднее время восстановления k-го элемента последовательного соединения'))
        mk = int(input('Введите число отказов k-го средства НКУ на наблюдаемое время испытаний'))
        takl = int(input('Введите время восстановления средства k-го типа после i-го отказа')) #Ввод всех переменных
        k = Tp / (Tp + Tb)
        print('Интенсивность отказа тех. средств из последовательных элементов:', k) #Интенсивность отказа тех. средств из последовательных элементов
        l = expit(l_k)
        print('Интенсивность отказов технических средств:', l)
        T_b = l * expit(l_k * Tbk)
        print('Среднее время восстановления тех.средств, состоящих из послед. элементов', T_b)
        P = 1 / Tb
        print(' Вероятность (P) выхода одного компонента из строя в течение одного', P)
        #Tbk = 
        #uk = 1/Tbk

Kg()
'''class Cicl: #Цикл коэфициента готовности, схема (на бумаге)
        N, T = int(input("Введите кол-во итераций\n")), int(input("Введите время моделирования\n"))
        P, R = float(input("Введите вероятность отказа\n")), []  #Ввод всех переменных
        def function():
            i, t, = 0, 0 #Счетчики
            while i < N:
                i += 1
                while t < T:
                    t += 1
                    r = random(0, 1) #Итерация отказа
                    if r <= P:
                        R.push({t, 0 == True})
                        function() #Возвращаемся к началу
                    if t != T:
                        break
                    R.push({T, 0 == False})
                    function() #Возвращаемся к началу
            K = Rot/Rob
            return K
Cicl()
'''